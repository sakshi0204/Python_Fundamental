def nextPermutation(permutation, n):
    
    # Search for the breakpoint where the dip occurs first from the end
    ind = -1
    for i in range(n - 2, -1, -1):
        if permutation[i] < permutation[i + 1]:
            ind = i
            break
    
    # If no dip is found, the elements are in descending order
    # Reverse to get the smallest permutation
    if ind == -1:
        permutation.reverse()
        return permutation
    
    # Swapping to get the nearest largest element
    for i in range(n - 1, ind, -1):
        if permutation[ind] < permutation[i]:
            permutation[ind], permutation[i] = permutation[i], permutation[ind]
            break
    # Swapping at last so that we get the smallest sequnce after our break point    
    permutation[ind + 1:] = reversed(permutation[ind + 1:])
    return permutation

